using System.Drawing;

namespace LitePlacer
{
    public interface IMySettings
    {
        double Calibration_A_Marker_X { get; set; }
        double Calibration_A_Marker_Y { get; set; }
        double Calibration_B_Marker_X { get; set; }
        double Calibration_B_Marker_Y { get; set; }
        double Calibration_C_Marker_X { get; set; }
        double Calibration_C_Marker_Y { get; set; }
        double Calibration_Common_X { get; set; }
        double Calibration_Common_Y { get; set; }
        double Calibration_D_Marker_X { get; set; }
        double Calibration_D_Marker_Y { get; set; }
        double Calibration_E_Marker_X { get; set; }
        double Calibration_E_Marker_Y { get; set; }
        double Calibration_X_Quanta_Step_Size { get; set; }
        double Calibration_Y_Quanta_Step_Size { get; set; }
        bool Cameras_KeepActive { get; set; }
        bool Cameras_RobustSwitch { get; set; }
        int CNC_AltJogSpeed { get; set; }
        int CNC_AspeedMax { get; set; }
        int CNC_CtlrJogSpeed { get; set; }
        bool CNC_EnableMouseWheelJog { get; set; }
        bool CNC_EnableNumPadJog { get; set; }
        int CNC_NormalJogSpeed { get; set; }
        string CNC_SerialPort { get; set; }
        bool CNC_SlackCompensation { get; set; }
        bool CNC_SlackCompensationA { get; set; }
        decimal CNC_SmallMovementSpeed { get; set; }
        double CNC_SquareCorrection { get; set; }
        int CNC_ZspeedMax { get; set; }
        int DownCam_DesiredX { get; set; }
        int DownCam_DesiredY { get; set; }
        bool DownCam_DrawTicks { get; set; }
        int DownCam_index { get; set; }
        bool Downcam_InvertedHomeMark { get; set; }
        int DownCam_MeasurementDelay { get; set; }
        double DownCam_NozzleOffsetX { get; set; }
        double DownCam_NozzleOffsetY { get; set; }
        Color DownCam_SnapshotColor { get; set; }
        double DownCam_XmmPerPixel { get; set; }
        double DownCam_YmmPerPixel { get; set; }
        bool DownCam_Zoom { get; set; }
        double DownCam_Zoomfactor { get; set; }
        string DowncamMoniker { get; set; }
        double General_BelowPCB_Allowance { get; set; }
        bool General_CheckForUpdates { get; set; }
        double General_JigOffsetX { get; set; }
        double General_JigOffsetY { get; set; }
        double General_MachineSizeX { get; set; }
        double General_MachineSizeY { get; set; }
        double General_Mark1A { get; set; }
        string General_Mark1Name { get; set; }
        double General_Mark1X { get; set; }
        double General_Mark1Y { get; set; }
        double General_Mark2A { get; set; }
        string General_Mark2Name { get; set; }
        double General_Mark2X { get; set; }
        double General_Mark2Y { get; set; }
        double General_Mark3A { get; set; }
        string General_Mark3Name { get; set; }
        double General_Mark3X { get; set; }
        double General_Mark3Y { get; set; }
        double General_Mark4A { get; set; }
        string General_Mark4Name { get; set; }
        double General_Mark4X { get; set; }
        double General_Mark4Y { get; set; }
        double General_Mark5A { get; set; }
        string General_Mark5Name { get; set; }
        double General_Mark5X { get; set; }
        double General_Mark5Y { get; set; }
        double General_Mark6A { get; set; }
        string General_Mark6Name { get; set; }
        double General_Mark6X { get; set; }
        double General_Mark6Y { get; set; }
        string General_MediumSpeed { get; set; }
        bool General_MuteLogging { get; set; }
        double General_ParkX { get; set; }
        double General_ParkY { get; set; }
        double General_PickupCenterX { get; set; }
        double General_PickupCenterY { get; set; }
        int General_PickupReleaseTime { get; set; }
        int General_PickupVacuumTime { get; set; }
        double General_PlacementBackOff { get; set; }
        bool General_PumpOutputInverted { get; set; }
        double General_ShadeGuard_mm { get; set; }
        bool General_UpgradeRequired { get; set; }
        bool General_VacuumOutputInverted { get; set; }
        bool General_VigorousHoming { get; set; }
        double General_ZprobingHysteresis { get; set; }
        double General_ZTestTravel { get; set; }
        double General_ZtoPCB { get; set; }
        double Job_Xoffset { get; set; }
        double Job_Yoffset { get; set; }
        bool Nozzles_AfullSpeed { get; set; }
        double Nozzles_Aspeed { get; set; }
        double Nozzles_CalibrationDistance { get; set; }
        double Nozzles_CalibrationMaxSize { get; set; }
        double Nozzles_CalibrationMinSize { get; set; }
        int Nozzles_count { get; set; }
        int Nozzles_current { get; set; }
        int Nozzles_default { get; set; }
        bool Nozzles_Enabled { get; set; }
        bool Nozzles_FirstMoveFullSpeed { get; set; }
        bool Nozzles_FirstMoveSlackCompensation { get; set; }
        bool Nozzles_LastMoveFullSpeed { get; set; }
        int Nozzles_maximum { get; set; }
        int Nozzles_Timeout { get; set; }
        double Nozzles_WarningTreshold { get; set; }
        bool Nozzles_XYfullSpeed { get; set; }
        double Nozzles_XYspeed { get; set; }
        bool Nozzles_ZfullSpeed { get; set; }
        double Nozzles_Zspeed { get; set; }
        bool Panel_UseBoardFids { get; set; }
        double Panel_XFirstOffset { get; set; }
        double Panel_XIncrement { get; set; }
        int Panel_XRepeats { get; set; }
        double Panel_YFirstOffset { get; set; }
        double Panel_YIncrement { get; set; }
        int Panel_YRepeats { get; set; }
        double Placement_Depth { get; set; }
        bool Placement_FiducialConfirmation { get; set; }
        int Placement_FiducialsType { get; set; }
        double Placement_FiducialTolerance { get; set; }
        bool Placement_OmitNozzleCalibration { get; set; }
        bool Placement_SkipMeasurements { get; set; }
        bool Placement_UpdateJobGridAtRuntime { get; set; }
        int UpCam_DesiredX { get; set; }
        int UpCam_DesiredY { get; set; }
        int UpCam_index { get; set; }
        int UpCam_MeasurementDelay { get; set; }
        double UpCam_PositionX { get; set; }
        double UpCam_PositionY { get; set; }
        Color UpCam_SnapshotColor { get; set; }
        double UpCam_XmmPerPixel { get; set; }
        double UpCam_YmmPerPixel { get; set; }
        bool UpCam_Zoom { get; set; }
        double UpCam_Zoomfactor { get; set; }
        string UpcamMoniker { get; set; }
    }
}